{"version":3,"file":"rt-define-stroke-width.mjs","sources":["../../../projects/rt-define-stroke-width/src/lib/rt-define-stroke-width.service.ts","../../../projects/rt-define-stroke-width/src/lib/rt-define-stroke-width.module.ts","../../../projects/rt-define-stroke-width/src/public-api.ts","../../../projects/rt-define-stroke-width/src/rt-define-stroke-width.ts"],"sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {CSSFont} from './symbols';\n\n@Injectable()\nexport class RtDefineStrokeWidthService {\n  /** Canvas context used to measure text width. */\n  protected canvasContext: CanvasRenderingContext2D;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    const canvas = document.createElement('canvas');\n    this.canvasContext = canvas.getContext('2d');\n  }\n\n  /**\n   * Returns stroke width for the provided text with specified CSS rule.\n   */\n  public getTextWidth(stroke: string, font: CSSFont): number {\n    this.canvasContext.font = font;\n    const metrics = this.canvasContext.measureText(stroke);\n    return metrics.width;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RtDefineStrokeWidthService} from './rt-define-stroke-width.service';\n\n@NgModule({\n  providers: [RtDefineStrokeWidthService],\n})\nexport class RtDefineStrokeWidthModule {\n}\n","/*\n * Public API Surface of rt-define-stroke-width\n */\n\nexport * from './lib/rt-define-stroke-width.service';\nexport * from './lib/rt-define-stroke-width.module';\nexport * from './lib/symbols';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAIA,MACa,0BAA0B,CAAA;AAIC,IAAA,QAAA,CAAA;;AAF5B,IAAA,aAAa,CAA2B;AAElD,IAAA,WAAA,CAAsC,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;QACtD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAC9C;AAED;;AAEG;IACI,YAAY,CAAC,MAAc,EAAE,IAAa,EAAA;AAC/C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;QAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACvD,OAAO,OAAO,CAAC,KAAK,CAAC;KACtB;AAhBU,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,kBAIjB,QAAQ,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAJjB,0BAA0B,EAAA,CAAA,CAAA;;2FAA1B,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBADtC,UAAU;;0BAKI,MAAM;2BAAC,QAAQ,CAAA;;;ACN9B,MAGa,yBAAyB,CAAA;uGAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wGAAzB,yBAAyB,EAAA,CAAA,CAAA;wGAAzB,yBAAyB,EAAA,SAAA,EAFzB,CAAC,0BAA0B,CAAC,EAAA,CAAA,CAAA;;2FAE5B,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAHrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,SAAS,EAAE,CAAC,0BAA0B,CAAC;AACxC,iBAAA,CAAA;;;ACLD;;AAEG;;ACFH;;AAEG;;;;"}